apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Spring-boot-rest-example Deployment Template
    iconClass: icon-java
    tags: microservice,jboss,spring
  name: spring-boot-rest-example-deployment
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APP_NAME}
    labels:
      app: spring-boot-rest-example
      component: spring-boot-rest-example
  spec:
    replicas: 1
    selector:
      app: spring-boot-rest-example
      component: spring-boot-rest-example
      deploymentconfig: ${APP_NAME}
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: spring-boot-rest-example
          component: spring-boot-rest-example
          deploymentconfig: ${APP_NAME}
        name: ${APP_NAME}
      spec:
        containers:
        - image: spring-boot-rest-example
          imagePullPolicy: Always
          name: ${APP_NAME}
          envFrom:
          - secretRef:
              name: spring-boot-rest-example-mysql-credentials
            prefix: APB_
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: spring-boot-rest-example:${IMAGE_VERSION}
          namespace: ${IMAGE_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: spring-boot-rest-example
      component: spring-boot-rest-example
    name: ${APP_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${APP_NAME}
parameters:
- displayName: spring-boot-rest-example Service Name
  name: APP_NAME
  required: true
  value: spring-boot-rest-example
- displayName: Image Version
  description: spring-boot-rest-example image version to deploy
  name: IMAGE_VERSION
  required: true
  value: latest
- displayName: Image Namespace
  description: The namespace to push the built spring-boot-rest-example images to
  name: IMAGE_NAMESPACE
  value: cicd
  